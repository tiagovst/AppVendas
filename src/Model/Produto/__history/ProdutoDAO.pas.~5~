unit ProdutoDAO;

interface

uses
  System.SysUtils,
  FireDAC.Comp.Client,
  Conexao,
  Produto;

type
  TProdutoDAO = class(TInterfacedObject)//, IProdutoDAO)
    SQLSave: TFDQuery;
    SQLDelete: TFDQuery;
    SQLUpdate: TFDQuery;
    SQLSearch: TFDQuery;
    SQLAll: TFDQuery;

  private
    function gerarID: Integer;
    function Inserir(Produto: TProduto; out erro: String): Boolean;
    function Alterar(Produto: TProduto; out erro: String): Boolean;
    function Excluir(ID: Integer; out erro: String): Boolean;

    procedure PesquisarNome(Nome: String);
    procedure PesquisarCategoria();
    procedure Pesquisar;
    procedure CarregarProduto(Produto: TProduto; ID: Integer);
    procedure CarregarPessoa(Produto: TProduto; ID: Integer);

  public

  end;

var
  uProdutoDAO: TProdutoDAO;

implementation

{ TProdutoDAO }

{ Classe Produto:
  Nome, ID, CodigoBarras, Descricao, Referencia, Preco, Categoria, QuantidadeEstoque
  Fornecedor, DataValidade

  DB:
  ID, NOME, CODIGO_BARRAS, DESCRICAO, REFERENCIA, PRECO, CATEGORIA, QUANTIDADE_ESTOQUE
  FORNECEDOR, DATA_VALIDADE
}

function TProdutoDAO.Alterar(Produto: TProduto; out erro: String): Boolean;
begin
  SQLUpdate := TFDQuery.Create(nil);

  with SQLUpdate, Produto do
  begin
    Connection := dmConexao.FDConnection;

    SQL.Text := 'update PRODUTOS set NOME = :NOME, CODIGO_BARRAS = :CODIGO_BARRAS, ' +
    'DESCRICAO = :DESCRICAO, REFERENCIA = :REFERENCIA, PRECO = :PRECO, ' +
    'CATEGORIA = :CATEGORIA, QUANTIDADE_ESTOQUE = :QUANTIDADE_ESTOQUE, ' +
    'FORNECEDOR = :FORNECEDOR, DATA_VALIDADE = :DATA_VALIDADE where (ID = :ID)';

    Params.ParamByName('ID').AsInteger := ID;
    Params.ParamByName('NOME').AsString := Nome;
    Params.ParamByName('CODIGO_BARRAS').AsString := CodigoBarras;
    Params.ParamByName('DESCRICAO').AsString := Descricao;
    Params.ParamByName('REFERENCIA').AsString := Referencia;
    Params.ParamByName('PRECO').AsFloat := Preco;
    Params.ParamByName('CATEGORIA').AsString := Categoria;
    Params.ParamByName('QUANTIDADE_ESTOQUE').AsInteger := QuantidadeEstoque;
    Params.ParamByName('FORNECEDOR').AsString := Fornecedor;
    Params.ParamByName('DATA_VALIDADE').AsDateTime := DataValidade;

  end;
end;

procedure TProdutoDAO.CarregarPessoa(Produto: TProduto; ID: Integer);
begin

end;

procedure TProdutoDAO.CarregarProduto(Produto: TProduto; ID: Integer);
begin

end;

function TProdutoDAO.Excluir(ID: Integer; out erro: String): Boolean;
begin

end;

function TProdutoDAO.gerarID: Integer;
begin

end;

function TProdutoDAO.Inserir(Produto: TProduto; out erro: String): Boolean;
begin

end;

procedure TProdutoDAO.Pesquisar;
begin

end;

procedure TProdutoDAO.PesquisarCategoria;
begin

end;

procedure TProdutoDAO.PesquisarNome(Nome: String);
begin

end;

end.
